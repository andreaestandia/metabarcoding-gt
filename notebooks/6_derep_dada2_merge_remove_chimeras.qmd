---
  title: "Step 6: Merge and remove_chimeras.R"
author: "Andrea Estandia"
date: "`r Sys.Date()`"
format: html
editor_options: 
  chunk_output_type: console
---
  
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
source(here::here("src", "metabarcoding-gt.R"))
install_required_packages()
```

```{r}
## read in the filt files
filtFs <- readRDS(file.path(LOCUS_DIR, 
                            "R_objects", 
                            "04_fnFs.filtN.rds"))

filtRs <- readRDS(file.path(LOCUS_DIR, 
                            "R_objects", 
                            "04_fnRs.filtN.rds"))

## read in the error models
errF <- readRDS(file.path(LOCUS_DIR, 
                          "R_objects", 
                          "05_errF.rds"))

errR <- readRDS(file.path(LOCUS_DIR, 
                          "R_objects", 
                          "05_errR.rds"))

## check files exist
exists <- file.exists(filtFs)

## dereplicate the reads
derepFs <- derepFastq(filtFs[exists])
derepRs <- derepFastq(filtRs[exists])

# get sample names
sample.names <- 
  readRDS(file.path(LOCUS_DIR, 
                    "R_objects", 
                    "03_sample_names.rds"))

## name the derep class objects
names(derepFs) <- sample.names[exists]
names(derepRs) <- sample.names[exists]

## perform dada2 sample inference
dadaFs <- dada(derepFs, err = errF, multithread=TRUE)
dadaRs <- dada(derepRs, err = errR, multithread=TRUE)

## merge paired reads
mergers <- mergePairs(dadaFs, derepFs, dadaRs, derepRs, verbose=TRUE)

## make ASV table
seqtab <- makeSequenceTable(mergers)

## remove chimeras
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=TRUE, verbose=TRUE)

## write out ASV sequences
sequences <- colnames(seqtab.nochim)
headers <- vector(dim(seqtab.nochim)[2], mode="character")

for (i in 1:dim(seqtab.nochim)[2]) {
  headers[i] <- paste(">ASV", i, sep="_")
}

output_fasta <- c(rbind(headers, sequences))

write(output_fasta, file.path(LOCUS_DIR, "outputs", paste0("06_", marker, "ASV_seqs.fasta")))

# write out ASV counts
tab <- t(seqtab.nochim)

write.table(tab, 
            file.path(LOCUS_DIR, 
                      "outputs", 
                      paste0("06_", 
                             marker, 
                             "ASV_counts.tsv")), 
            sep="\t",
            quote=F, 
            col.names=NA)

saveRDS(dadaFs, file = file.path(LOCUS_DIR, 
                      "R_objects", "06_dadaFs.rds"))
saveRDS(dadaRs, file.path(LOCUS_DIR, 
                      "R_objects",
                      "06_dadaRs.rds"))
saveRDS(mergers, file.path(LOCUS_DIR, 
                      "R_objects",
                      "06_mergers.rds"))
saveRDS(seqtab.nochim, 
        file = file.path(LOCUS_DIR, 
                      "R_objects", 
                      "06_seqtab.nochim.rds"))


# Transpose so samples are rows
seqtab.nochim.t <- t(seqtab.nochim)

# Iterate over each sample and write its ASVs to a separate FASTA
for (sample in colnames(seqtab.nochim.t)) {
  sample_counts <- seqtab.nochim.t[, sample]
  present_seqs <- names(sample_counts[sample_counts > 0])
  
  if (length(present_seqs) > 0) {
    # Create unique ASV headers for each sequence
    headers <- paste0(">", sample, "_ASV", seq_along(present_seqs))
    
    # Interleave headers and sequences
    fasta_lines <- c(rbind(headers, present_seqs))
    
    # Write to FASTA file
    write(fasta_lines, 
          file = file.path(LOCUS_DIR, "outputs",
                           "fasta_asv",
                           paste0(sample, "_ASVs.fasta")))
  }
}
```
